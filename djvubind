#! /usr/bin/env python

#       This program is free software; you can redistribute it and/or modify
#       it under the terms of the GNU General Public License as published by
#       the Free Software Foundation; either version 3 of the License, or
#       (at your option) any later version.
#
#       This program is distributed in the hope that it will be useful,
#       but WITHOUT ANY WARRANTY; without even the implied warranty of
#       MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#       GNU General Public License for more details.
#
#       You should have received a copy of the GNU General Public License
#       along with this program; if not, write to the Free Software
#       Foundation, Inc.

import optparse
import os
import sys

import Djvubind

if __name__ == '__main__':
    # Command line parsing
    usage = "usage: %prog [options] directory"
    description = "djvubind is designed to facilitate creating high-quality djvu files, including positional ocr, metadata, and bookmarks."
    parser = optparse.OptionParser(usage, version='0.0.1', description=description)
    parser.set_defaults(quiet=False,
                        front_cover='cover_front.tiff', back_cover='cover_back.tiff',
                        metadata='metadata', bookmarks='bookmarks')
    parser.add_option("--front_cover", dest="cover_front", help="Specifies an alternate front cover image.  By default, '%default' is used if present.")
    parser.add_option("--back_cover", dest="cover_back", help="Specifies an alternate back cover image.  By default, '%default' is used if present.")
    parser.add_option("--metadata", dest="metadata", help="Specifies an alternate metadata file.  By default, '%default' is used if present.")
    parser.add_option("--bookmarks", dest="bookmarks", help="Specifies an alternate bookmarks.  By default, '%default' is used if present.")
    parser.add_option("-q", "--quiet", action="store_true", dest="quiet")
    (options, args) = parser.parse_args(sys.argv)

    if options.quiet:
        sys.stdout = open('/dev/null', 'w')

    # Dependency check
    deps = ['cpaldjvu', 'djvm', 'djvused', 'identify', 'minidjvu', 'tesseract']
    for dep in deps:
        if (not Djvubind.utils.is_executable(dep)):
            print('err: __main__: external dependency ({0}) cannot be found'.format(dep), sys.stderr)
            sys.exit(1)

    # Change working directory if necessary
    if (len(args) > 2):
        print('Too many arguments, check your syntax.')
        sys.exit(1)
    if (len(args) == 2):
        if (not os.path.isdir(args[1])):
            print('The argument ({0}) is not a directory.'.format(args[1]))
            sys.exit(1)
        else:
            directory = os.path.normpath(os.path.join(os.path.curdir, args[1]))
            os.chdir(directory)

